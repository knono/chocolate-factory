[
    {
        "id": "complete_dashboard_flow",
        "type": "tab",
        "label": "🏭 Dashboard Completo TFM",
        "disabled": false,
        "info": "Dashboard completo con información, predicciones ML y recomendaciones operativas"
    },
    {
        "id": "inject_timer",
        "type": "inject",
        "z": "complete_dashboard_flow",
        "name": "⏰ Actualizar cada 30s",
        "props": [{"p": "payload"}],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 3,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [["fetch_dashboard_data"]]
    },
    {
        "id": "fetch_dashboard_data",
        "type": "http request",
        "z": "complete_dashboard_flow",
        "name": "📊 Datos Dashboard",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://fastapi-app:8000/dashboard/summary",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 60,
        "wires": [["split_dashboard_data"]]
    },
    {
        "id": "split_dashboard_data",
        "type": "function",
        "z": "complete_dashboard_flow",
        "name": "🔄 Separar Datos",
        "func": "// Separar los datos del dashboard en diferentes mensajes\nconst data = msg.payload;\n\n// Datos actuales\nmsg.payload = {\n    energy_price: data.current?.energy_price || 0,\n    temperature: data.current?.temperature || 0,\n    humidity: data.current?.humidity || 0,\n    production_status: data.current?.production_status || \"🔄 Cargando...\"\n};\nmsg.topic = \"current_data\";\nnode.send([msg, null, null, null]);\n\n// Predicciones ML\nconst predMsg = {...msg};\npredMsg.payload = {\n    energy_score: data.predictions?.energy_score || 0,\n    production_class: data.predictions?.production_class || \"Unknown\"\n};\npredMsg.topic = \"predictions\";\nnode.send([null, predMsg, null, null]);\n\n// Estado del sistema\nconst statusMsg = {...msg};\nstatusMsg.payload = {\n    status: data.status || \"🔄 Cargando...\",\n    alerts_count: data.alerts_count || 0,\n    timestamp: data.timestamp\n};\nstatusMsg.topic = \"system_status\";\nnode.send([null, null, statusMsg, null]);\n\n// Log para debug\nconst logMsg = {...msg};\nlogMsg.payload = `Dashboard actualizado: ${new Date().toLocaleTimeString()}`;\nnode.send([null, null, null, logMsg]);\n\nreturn null;",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            ["current_energy_gauge", "current_temp_gauge", "current_humidity_gauge", "production_status_text"],
            ["energy_score_gauge", "production_class_text"],
            ["system_status_text", "alerts_indicator"],
            ["debug_log"]
        ]
    },
    {
        "id": "current_energy_gauge",
        "type": "ui_gauge",
        "z": "complete_dashboard_flow",
        "name": "💰 Precio Energía",
        "group": "current_conditions",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Precio Energía (€/kWh)",
        "label": "€/kWh",
        "format": "{{msg.payload.energy_price | number:3}}",
        "min": 0.05,
        "max": 0.40,
        "colors": ["#00b500", "#e6e600", "#ca3838"],
        "seg1": 0.15,
        "seg2": 0.25,
        "x": 900,
        "y": 20,
        "wires": []
    },
    {
        "id": "current_temp_gauge",
        "type": "ui_gauge",
        "z": "complete_dashboard_flow",
        "name": "🌡️ Temperatura",
        "group": "current_conditions",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temperatura Actual",
        "label": "°C",
        "format": "{{msg.payload.temperature | number:1}}",
        "min": 10,
        "max": 45,
        "colors": ["#0066cc", "#00b500", "#ca3838"],
        "seg1": 20,
        "seg2": 35,
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "current_humidity_gauge",
        "type": "ui_gauge",
        "z": "complete_dashboard_flow",
        "name": "💧 Humedad",
        "group": "current_conditions",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humedad Relativa",
        "label": "%",
        "format": "{{msg.payload.humidity | number:0}}",
        "min": 30,
        "max": 90,
        "colors": ["#ca3838", "#00b500", "#ca3838"],
        "seg1": 45,
        "seg2": 75,
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "production_status_text",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "current_conditions",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "🏭 Estado Producción",
        "label": "Estado de Producción:",
        "format": "{{msg.payload.production_status}}",
        "layout": "row-center",
        "x": 920,
        "y": 200,
        "wires": []
    },
    {
        "id": "energy_score_gauge",
        "type": "ui_gauge",
        "z": "complete_dashboard_flow",
        "name": "⚡ Score ML Energía",
        "group": "ml_predictions",
        "order": 1,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "Score Optimización Energética (ML)",
        "label": "puntos",
        "format": "{{msg.payload.energy_score | number:1}}",
        "min": 0,
        "max": 100,
        "colors": ["#ca3838", "#e6e600", "#00b500"],
        "seg1": 40,
        "seg2": 70,
        "x": 940,
        "y": 300,
        "wires": []
    },
    {
        "id": "production_class_text",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "ml_predictions",
        "order": 2,
        "width": 6,
        "height": 3,
        "name": "🤖 Recomendación ML",
        "label": "Recomendación de Producción (ML):",
        "format": "{{msg.payload.production_class}}",
        "layout": "row-center",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "system_status_text",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "system_health",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "✅ Estado Sistema",
        "label": "Estado del Sistema:",
        "format": "{{msg.payload.status}}",
        "layout": "row-center",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "alerts_indicator",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "system_health",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "🚨 Alertas Activas",
        "label": "Alertas Activas:",
        "format": "{{msg.payload.alerts_count}} alertas",
        "layout": "row-center",
        "x": 940,
        "y": 500,
        "wires": []
    },
    {
        "id": "debug_log",
        "type": "debug",
        "z": "complete_dashboard_flow",
        "name": "📝 Log Dashboard",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 560,
        "wires": []
    },
    {
        "id": "fetch_detailed_button",
        "type": "ui_button",
        "z": "complete_dashboard_flow",
        "name": "🔍 Información Detallada",
        "group": "controls",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "Ver Información Detallada",
        "tooltip": "Obtener dashboard completo con alertas y recomendaciones",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "detailed_request",
        "x": 180,
        "y": 140,
        "wires": [["fetch_complete_dashboard"]]
    },
    {
        "id": "fetch_complete_dashboard",
        "type": "http request",
        "z": "complete_dashboard_flow",
        "name": "📋 Dashboard Completo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://fastapi-app:8000/dashboard/complete",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 140,
        "wires": [["display_detailed_info"]]
    },
    {
        "id": "display_detailed_info",
        "type": "function",
        "z": "complete_dashboard_flow",
        "name": "📄 Formatear Info Detallada",
        "func": "const data = msg.payload;\n\n// Formatear información detallada\nlet detailedInfo = \"=== 🏭 DASHBOARD COMPLETO TFM CHOCOLATE FACTORY ===\\n\\n\";\n\n// Información actual\nif (data.current_info) {\n    detailedInfo += \"📊 INFORMACIÓN ACTUAL:\\n\";\n    if (data.current_info.energy) {\n        detailedInfo += `💰 Precio Energía: ${data.current_info.energy.price_eur_kwh} €/kWh\\n`;\n        detailedInfo += `📈 Tendencia: ${data.current_info.energy.trend || 'estable'}\\n`;\n    }\n    if (data.current_info.weather) {\n        detailedInfo += `🌡️ Temperatura: ${data.current_info.weather.temperature}°C\\n`;\n        detailedInfo += `💧 Humedad: ${data.current_info.weather.humidity}%\\n`;\n        detailedInfo += `🎯 Confort: ${data.current_info.weather.comfort_index || 'N/A'}\\n`;\n    }\n    detailedInfo += `🏭 Producción: ${data.current_info.production_status}\\n\\n`;\n}\n\n// Predicciones ML\nif (data.predictions) {\n    detailedInfo += \"🤖 PREDICCIONES ML:\\n\";\n    if (data.predictions.energy_optimization) {\n        detailedInfo += `⚡ Score Energía: ${data.predictions.energy_optimization.score}/100\\n`;\n        detailedInfo += `💡 Recomendación: ${data.predictions.energy_optimization.recommendation}\\n`;\n    }\n    if (data.predictions.production_recommendation) {\n        detailedInfo += `🎯 Clase Producción: ${data.predictions.production_recommendation.class}\\n`;\n        detailedInfo += `🔧 Acción: ${data.predictions.production_recommendation.action}\\n`;\n    }\n    detailedInfo += \"\\n\";\n}\n\n// Recomendaciones\nif (data.recommendations) {\n    detailedInfo += \"💡 RECOMENDACIONES OPERATIVAS:\\n\";\n    Object.keys(data.recommendations).forEach(category => {\n        if (Array.isArray(data.recommendations[category]) && data.recommendations[category].length > 0) {\n            detailedInfo += `${category.toUpperCase()}:\\n`;\n            data.recommendations[category].forEach(rec => {\n                detailedInfo += `  • ${rec}\\n`;\n            });\n        }\n    });\n    detailedInfo += \"\\n\";\n}\n\n// Alertas\nif (data.alerts && data.alerts.length > 0) {\n    detailedInfo += \"🚨 ALERTAS ACTIVAS:\\n\";\n    data.alerts.forEach((alert, index) => {\n        detailedInfo += `${index + 1}. [${alert.level?.toUpperCase()}] ${alert.message}\\n`;\n        if (alert.action) {\n            detailedInfo += `   Acción: ${alert.action}\\n`;\n        }\n    });\n    detailedInfo += \"\\n\";\n}\n\n// Estado del sistema\nif (data.system_status) {\n    detailedInfo += \"⚙️ ESTADO DEL SISTEMA:\\n\";\n    detailedInfo += `Estado: ${data.system_status.status}\\n`;\n    if (data.system_status.data_sources) {\n        detailedInfo += \"Fuentes de Datos:\\n\";\n        Object.keys(data.system_status.data_sources).forEach(source => {\n            detailedInfo += `  • ${source}: ${data.system_status.data_sources[source]}\\n`;\n        });\n    }\n}\n\ndetailedInfo += `\\n⏰ Última actualización: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = detailedInfo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [["detailed_display_text"]]
    },
    {
        "id": "detailed_display_text",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "detailed_info",
        "order": 1,
        "width": 12,
        "height": 10,
        "name": "📋 Información Detallada",
        "label": "",
        "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap;'>{{msg.payload}}</pre>",
        "layout": "row-left",
        "x": 960,
        "y": 140,
        "wires": []
    },
    {
        "id": "fetch_alerts_button",
        "type": "ui_button",
        "z": "complete_dashboard_flow",
        "name": "🚨 Ver Alertas",
        "group": "controls",
        "order": 2,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Alertas",
        "tooltip": "Ver todas las alertas activas del sistema",
        "color": "",
        "bgcolor": "#ff6b6b",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "alerts_request",
        "x": 150,
        "y": 200,
        "wires": [["fetch_alerts"]]
    },
    {
        "id": "fetch_recommendations_button",
        "type": "ui_button",
        "z": "complete_dashboard_flow",
        "name": "💡 Ver Recomendaciones",
        "group": "controls",
        "order": 3,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Recomendaciones",
        "tooltip": "Ver recomendaciones operativas del sistema",
        "color": "",
        "bgcolor": "#4ecdc4",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "recommendations_request",
        "x": 180,
        "y": 260,
        "wires": [["fetch_recommendations"]]
    },
    {
        "id": "fetch_alerts",
        "type": "http request",
        "z": "complete_dashboard_flow",
        "name": "🚨 Alertas API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://fastapi-app:8000/dashboard/alerts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 200,
        "wires": [["format_alerts"]]
    },
    {
        "id": "fetch_recommendations",
        "type": "http request",
        "z": "complete_dashboard_flow",
        "name": "💡 Recomendaciones API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://fastapi-app:8000/dashboard/recommendations",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 420,
        "y": 260,
        "wires": [["format_recommendations"]]
    },
    {
        "id": "format_alerts",
        "type": "function",
        "z": "complete_dashboard_flow",
        "name": "🚨 Formatear Alertas",
        "func": "const data = msg.payload;\nlet alertText = \"🚨 ALERTAS ACTIVAS DEL SISTEMA\\n\\n\";\n\nif (data.alerts && data.alerts.length > 0) {\n    data.alerts.forEach((alert, index) => {\n        const levelEmoji = {\n            'critical': '🔴',\n            'warning': '🟡', \n            'high': '🟠',\n            'info': '🔵'\n        }[alert.level] || '⚪';\n        \n        alertText += `${levelEmoji} ALERTA ${index + 1}\\n`;\n        alertText += `Tipo: ${alert.type || 'General'}\\n`;\n        alertText += `Nivel: ${(alert.level || 'info').toUpperCase()}\\n`;\n        alertText += `Mensaje: ${alert.message}\\n`;\n        if (alert.action) {\n            alertText += `Acción requerida: ${alert.action}\\n`;\n        }\n        alertText += \"\\n\";\n    });\n    \n    alertText += `\\n📊 RESUMEN DE ALERTAS:\\n`;\n    if (data.alert_counts) {\n        Object.keys(data.alert_counts).forEach(level => {\n            const count = data.alert_counts[level];\n            if (count > 0) {\n                alertText += `${level.toUpperCase()}: ${count}\\n`;\n            }\n        });\n    }\n} else {\n    alertText += \"✅ No hay alertas activas en el sistema.\\n\";\n    alertText += \"El sistema está funcionando dentro de parámetros normales.\\n\";\n}\n\nalertText += `\\n⏰ Actualizado: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = alertText;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [["alerts_display"]]
    },
    {
        "id": "format_recommendations",
        "type": "function",
        "z": "complete_dashboard_flow",
        "name": "💡 Formatear Recomendaciones",
        "func": "const data = msg.payload;\nlet recText = \"💡 RECOMENDACIONES OPERATIVAS\\n\\n\";\n\nif (data.recommendations) {\n    const categories = {\n        'priority': '🔥 PRIORIDAD ALTA',\n        'energy': '⚡ ENERGÍA',\n        'production': '🏭 PRODUCCIÓN',\n        'maintenance': '🔧 MANTENIMIENTO'\n    };\n    \n    Object.keys(categories).forEach(category => {\n        const recs = data.recommendations[category];\n        if (recs && Array.isArray(recs) && recs.length > 0) {\n            recText += `${categories[category]}:\\n`;\n            recs.forEach((rec, index) => {\n                recText += `  ${index + 1}. ${rec}\\n`;\n            });\n            recText += \"\\n\";\n        }\n    });\n    \n    if (data.total_recommendations > 0) {\n        recText += `📊 ESTADÍSTICAS:\\n`;\n        recText += `Total de recomendaciones: ${data.total_recommendations}\\n`;\n        recText += `Recomendaciones prioritarias: ${data.priority_count}\\n`;\n    }\n} else {\n    recText += \"ℹ️ No hay recomendaciones específicas en este momento.\\n\";\n    recText += \"El sistema está operando de manera óptima.\\n\";\n}\n\nrecText += `\\n⏰ Actualizado: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = recText;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [["recommendations_display"]]
    },
    {
        "id": "alerts_display",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "detailed_info",
        "order": 2,
        "width": 12,
        "height": 6,
        "name": "🚨 Alertas del Sistema",
        "label": "",
        "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap; background-color: #fff5f5; padding: 10px; border-left: 4px solid #e53e3e;'>{{msg.payload}}</pre>",
        "layout": "row-left",
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "recommendations_display",
        "type": "ui_text",
        "z": "complete_dashboard_flow",
        "group": "detailed_info",
        "order": 3,
        "width": 12,
        "height": 6,
        "name": "💡 Recomendaciones",
        "label": "",
        "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap; background-color: #f0fff4; padding: 10px; border-left: 4px solid #38a169;'>{{msg.payload}}</pre>",
        "layout": "row-left",
        "x": 950,
        "y": 260,
        "wires": []
    },
    {
        "id": "current_conditions",
        "type": "ui_group",
        "name": "📊 Condiciones Actuales",
        "tab": "chocolate_dashboard",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ml_predictions",
        "type": "ui_group",
        "name": "🤖 Predicciones ML",
        "tab": "chocolate_dashboard",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "system_health",
        "type": "ui_group",
        "name": "⚙️ Estado del Sistema",
        "tab": "chocolate_dashboard",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "controls",
        "type": "ui_group",
        "name": "🎛️ Controles",
        "tab": "chocolate_dashboard",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "detailed_info",
        "type": "ui_group",
        "name": "📋 Información Detallada",
        "tab": "chocolate_dashboard",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "chocolate_dashboard",
        "type": "ui_tab",
        "name": "🏭 TFM Chocolate Factory",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]