[{"id":"f6f2187d.f17ca8","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"e4da17534d86d2b4","type":"tab","label":"üç´ Chocolate Factory","disabled":false,"info":"Main monitoring dashboard for Chocolate Factory"},{"id":"ui_base","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"üç´ Chocolate Factory Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"ui_tab_main","type":"ui_tab","name":"Main Dashboard","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"ui_group_metrics","type":"ui_group","name":"üìä Real-time Metrics","tab":"ui_tab_main","order":1,"disp":true,"width":"12","collapse":false},{"id":"ui_group_trends","type":"ui_group","name":"üìà Trends","tab":"ui_tab_main","order":2,"disp":true,"width":"12","collapse":false},{"id":"3cc11d24.ff01a2","type":"comment","z":"f6f2187d.f17ca8","name":"WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work","info":"\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.","x":350,"y":80,"wires":[]},{"id":"fb8b0ec6fd8d9012","type":"inject","z":"e4da17534d86d2b4","name":"Get Real Data","props":[{"p":"payload"}],"repeat":"10","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":100,"wires":[["859a1a293bf0390f","ca6dd275eee49ee2"]]},{"id":"859a1a293bf0390f","type":"http request","z":"e4da17534d86d2b4","name":"Get REE Price","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://fastapi-app:8000/ree/prices?hours=6","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":350,"y":80,"wires":[["3a4a683e0dbbac40"]]},{"id":"3a4a683e0dbbac40","type":"function","z":"e4da17534d86d2b4","name":"Process REE Data","func":"// Extract real energy price from REE API response with variation\nlet price = 0.15; // fallback\nif (msg.payload && msg.payload.data && msg.payload.data.length > 0) {\n    // Get random price from the last 6 hours to show variation\n    const randomIndex = Math.floor(Math.random() * msg.payload.data.length);\n    const priceEurMwh = parseFloat(msg.payload.data[randomIndex].price_eur_mwh);\n    price = priceEurMwh / 1000; // Convert MWh to kWh\n}\n\n// For the gauge (current price)\nmsg.payload = parseFloat(price.toFixed(4));\nmsg.topic = \"energy_price\";\n\n// Create a separate message for the chart\nconst chartMsg = {\n    payload: parseFloat(price.toFixed(4)),\n    topic: \"Energy Price\"  // This becomes the series name\n};\n\nreturn [msg, chartMsg];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":80,"wires":[["ec3d60971609be53"],["1702a5dfa7a32a94"]]},{"id":"ec3d60971609be53","type":"ui_gauge","z":"e4da17534d86d2b4","name":"Energy Price","group":"ui_group_metrics","order":1,"width":4,"height":4,"gtype":"gage","title":"‚ö° Energy Price","label":"‚Ç¨/kWh","format":"{{value}}","min":0,"max":"0.4","colors":["#00b04f","#e6e600","#ca3838"],"seg1":"0.15","seg2":"0.25","className":"","x":500,"y":80,"wires":[]},{"id":"ca6dd275eee49ee2","type":"http request","z":"e4da17534d86d2b4","name":"Get Weather Data","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://fastapi-app:8000/weather/openweather","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":350,"y":160,"wires":[["32cf80bbece05cd8"]]},{"id":"32cf80bbece05cd8","type":"function","z":"e4da17534d86d2b4","name":"Process Weather Data","func":"// Extract real temperature and humidity from custom API response\nlet temp = 22; // fallback\nlet humidity = 55; // fallback\n\n// The API returns emoji-formatted response, extract temperature\nif (msg.payload && msg.payload['üå°Ô∏è']) {\n    // Extract temperature from '39.11¬∞C' format\n    const tempStr = msg.payload['üå°Ô∏è'];\n    temp = parseFloat(tempStr.replace('¬∞C', '')) || 22;\n}\n\n// Extract humidity from '12.0%' format\nif (msg.payload && msg.payload['üíß']) {\n    const humidityStr = msg.payload['üíß'];\n    humidity = parseFloat(humidityStr.replace('%', '')) || 55;\n}\n\n// Create temperature message\nconst tempMsg = {\n    payload: parseFloat(temp.toFixed(1)),\n    topic: \"temperature\"\n};\n\n// Create humidity message\nconst humidityMsg = {\n    payload: parseFloat(humidity.toFixed(1)),\n    topic: \"humidity\"\n};\n\nreturn [tempMsg, humidityMsg];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":160,"wires":[["b8048731d66f6058"],["846ca0bb94faac65"]]},{"id":"b8048731d66f6058","type":"ui_gauge","z":"e4da17534d86d2b4","name":"Temperature","group":"ui_group_metrics","order":2,"width":4,"height":4,"gtype":"gage","title":"üå°Ô∏è Temperature","label":"¬∞C","format":"{{value}}","min":0,"max":45,"colors":["#00b04f","#e6e600","#ca3838"],"seg1":"20","seg2":"30","className":"","x":570,"y":160,"wires":[]},{"id":"846ca0bb94faac65","type":"ui_gauge","z":"e4da17534d86d2b4","name":"Humidity","group":"ui_group_metrics","order":3,"width":4,"height":4,"gtype":"gage","title":"üíß Humidity","label":"%","format":"{{value}}","min":0,"max":100,"colors":["#ca3838","#00b04f","#ca3838"],"seg1":"40","seg2":"70","className":"","x":570,"y":180,"wires":[]},{"id":"74dfb80e6ff467ba","type":"http request","z":"e4da17534d86d2b4","name":"FastAPI Health","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://fastapi-app:8000/health","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":380,"y":240,"wires":[["671f1c797688b44e"]]},{"id":"a985430bc2ab428c","type":"inject","z":"e4da17534d86d2b4","name":"Test API Every 30s","props":[{"p":"payload"}],"repeat":"30","crontab":"","once":true,"onceDelay":2,"topic":"","payload":"","payloadType":"date","x":160,"y":240,"wires":[["74dfb80e6ff467ba"]]},{"id":"671f1c797688b44e","type":"ui_text","z":"e4da17534d86d2b4","group":"ui_group_metrics","order":4,"width":12,"height":1,"name":"System Status","label":"üè≠ System Status:","format":"{{payload.status}}","layout":"row-spread","className":"","x":620,"y":240,"wires":[]},{"id":"1702a5dfa7a32a94","type":"ui_chart","z":"e4da17534d86d2b4","name":"Energy Price Trend","group":"ui_group_trends","order":1,"width":12,"height":6,"label":"‚ö° Energy Price Trend (Live Data)","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"Collecting data...","dot":false,"ymin":"0.1","ymax":"0.35","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e"],"outputs":1,"x":500,"y":200,"wires":[[]]}]{
  "id": "complete_dashboard_flow",
  "type": "tab",
  "label": "üè≠ Dashboard Completo TFM",
  "disabled": false,
  "info": "Dashboard completo con informaci√≥n, predicciones ML y recomendaciones operativas"
}
{
  "id": "inject_timer",
  "type": "inject",
  "z": "complete_dashboard_flow",
  "name": "‚è∞ Actualizar cada 30s",
  "props": [
    {
      "p": "payload"
    }
  ],
  "repeat": "30",
  "crontab": "",
  "once": true,
  "onceDelay": 3,
  "topic": "",
  "payload": "",
  "payloadType": "date",
  "x": 150,
  "y": 60,
  "wires": [
    [
      "fetch_dashboard_data"
    ]
  ]
}
{
  "id": "fetch_dashboard_data",
  "type": "http request",
  "z": "complete_dashboard_flow",
  "name": "üìä Datos Dashboard",
  "method": "GET",
  "ret": "obj",
  "paytoqs": false,
  "url": "http://fastapi-app:8000/dashboard/summary",
  "tls": "",
  "persist": false,
  "proxy": "",
  "authType": "",
  "x": 380,
  "y": 60,
  "wires": [
    [
      "split_dashboard_data"
    ]
  ]
}
{
  "id": "split_dashboard_data",
  "type": "function",
  "z": "complete_dashboard_flow",
  "name": "üîÑ Separar Datos",
  "func": "// Separar los datos del dashboard en diferentes mensajes\nconst data = msg.payload;\n\n// Datos actuales\nmsg.payload = {\n    energy_price: data.current?.energy_price || 0,\n    temperature: data.current?.temperature || 0,\n    humidity: data.current?.humidity || 0,\n    production_status: data.current?.production_status || \"üîÑ Cargando...\"\n};\nmsg.topic = \"current_data\";\nnode.send([msg, null, null, null]);\n\n// Predicciones ML\nconst predMsg = {...msg};\npredMsg.payload = {\n    energy_score: data.predictions?.energy_score || 0,\n    production_class: data.predictions?.production_class || \"Unknown\"\n};\npredMsg.topic = \"predictions\";\nnode.send([null, predMsg, null, null]);\n\n// Estado del sistema\nconst statusMsg = {...msg};\nstatusMsg.payload = {\n    status: data.status || \"üîÑ Cargando...\",\n    alerts_count: data.alerts_count || 0,\n    timestamp: data.timestamp\n};\nstatusMsg.topic = \"system_status\";\nnode.send([null, null, statusMsg, null]);\n\n// Log para debug\nconst logMsg = {...msg};\nlogMsg.payload = `Dashboard actualizado: ${new Date().toLocaleTimeString()}`;\nnode.send([null, null, null, logMsg]);\n\nreturn null;",
  "outputs": 4,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "x": 620,
  "y": 60,
  "wires": [
    [
      "current_energy_gauge",
      "current_temp_gauge",
      "current_humidity_gauge",
      "production_status_text"
    ],
    [
      "energy_score_gauge",
      "production_class_text"
    ],
    [
      "system_status_text",
      "alerts_indicator"
    ],
    [
      "debug_log"
    ]
  ]
}
{
  "id": "current_energy_gauge",
  "type": "ui_gauge",
  "z": "complete_dashboard_flow",
  "name": "üí∞ Precio Energ√≠a",
  "group": "current_conditions",
  "order": 1,
  "width": 4,
  "height": 4,
  "gtype": "gage",
  "title": "Precio Energ√≠a (‚Ç¨/kWh)",
  "label": "‚Ç¨/kWh",
  "format": "{{msg.payload.energy_price | number:3}}",
  "min": 0.05,
  "max": 0.40,
  "colors": [
    "#00b500",
    "#e6e600",
    "#ca3838"
  ],
  "seg1": 0.15,
  "seg2": 0.25,
  "x": 900,
  "y": 20,
  "wires": []
}
{
  "id": "current_temp_gauge",
  "type": "ui_gauge",
  "z": "complete_dashboard_flow",
  "name": "üå°Ô∏è Temperatura",
  "group": "current_conditions",
  "order": 2,
  "width": 4,
  "height": 4,
  "gtype": "gage",
  "title": "Temperatura Actual",
  "label": "¬∞C",
  "format": "{{msg.payload.temperature | number:1}}",
  "min": 10,
  "max": 45,
  "colors": [
    "#0066cc",
    "#00b500",
    "#ca3838"
  ],
  "seg1": 20,
  "seg2": 35,
  "x": 900,
  "y": 80,
  "wires": []
}
{
  "id": "current_humidity_gauge",
  "type": "ui_gauge",
  "z": "complete_dashboard_flow",
  "name": "üíß Humedad",
  "group": "current_conditions",
  "order": 3,
  "width": 4,
  "height": 4,
  "gtype": "gage",
  "title": "Humedad Relativa",
  "label": "%",
  "format": "{{msg.payload.humidity | number:0}}",
  "min": 30,
  "max": 90,
  "colors": [
    "#ca3838",
    "#00b500",
    "#ca3838"
  ],
  "seg1": 45,
  "seg2": 75,
  "x": 900,
  "y": 140,
  "wires": []
}
{
  "id": "production_status_text",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "current_conditions",
  "order": 4,
  "width": 6,
  "height": 2,
  "name": "üè≠ Estado Producci√≥n",
  "label": "Estado de Producci√≥n:",
  "format": "{{msg.payload.production_status}}",
  "layout": "row-center",
  "x": 920,
  "y": 200,
  "wires": []
}
{
  "id": "energy_score_gauge",
  "type": "ui_gauge",
  "z": "complete_dashboard_flow",
  "name": "‚ö° Score ML Energ√≠a",
  "group": "ml_predictions",
  "order": 1,
  "width": 6,
  "height": 5,
  "gtype": "gage",
  "title": "Score Optimizaci√≥n Energ√©tica (ML)",
  "label": "puntos",
  "format": "{{msg.payload.energy_score | number:1}}",
  "min": 0,
  "max": 100,
  "colors": [
    "#ca3838",
    "#e6e600",
    "#00b500"
  ],
  "seg1": 40,
  "seg2": 70,
  "x": 940,
  "y": 300,
  "wires": []
}
{
  "id": "production_class_text",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "ml_predictions",
  "order": 2,
  "width": 6,
  "height": 3,
  "name": "ü§ñ Recomendaci√≥n ML",
  "label": "Recomendaci√≥n de Producci√≥n (ML):",
  "format": "{{msg.payload.production_class}}",
  "layout": "row-center",
  "x": 950,
  "y": 360,
  "wires": []
}
{
  "id": "system_status_text",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "system_health",
  "order": 1,
  "width": 6,
  "height": 2,
  "name": "‚úÖ Estado Sistema",
  "label": "Estado del Sistema:",
  "format": "{{msg.payload.status}}",
  "layout": "row-center",
  "x": 940,
  "y": 440,
  "wires": []
}
{
  "id": "alerts_indicator",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "system_health",
  "order": 2,
  "width": 6,
  "height": 2,
  "name": "üö® Alertas Activas",
  "label": "Alertas Activas:",
  "format": "{{msg.payload.alerts_count}} alertas",
  "layout": "row-center",
  "x": 940,
  "y": 500,
  "wires": []
}
{
  "id": "debug_log",
  "type": "debug",
  "z": "complete_dashboard_flow",
  "name": "üìù Log Dashboard",
  "active": true,
  "tosidebar": true,
  "console": false,
  "tostatus": false,
  "complete": "payload",
  "targetType": "msg",
  "statusVal": "",
  "statusType": "auto",
  "x": 920,
  "y": 560,
  "wires": []
}
{
  "id": "fetch_detailed_button",
  "type": "ui_button",
  "z": "complete_dashboard_flow",
  "name": "üîç Informaci√≥n Detallada",
  "group": "controls",
  "order": 1,
  "width": 6,
  "height": 2,
  "passthru": false,
  "label": "Ver Informaci√≥n Detallada",
  "tooltip": "Obtener dashboard completo con alertas y recomendaciones",
  "color": "",
  "bgcolor": "",
  "icon": "",
  "payload": "",
  "payloadType": "str",
  "topic": "detailed_request",
  "x": 180,
  "y": 140,
  "wires": [
    [
      "fetch_complete_dashboard"
    ]
  ]
}
{
  "id": "fetch_complete_dashboard",
  "type": "http request",
  "z": "complete_dashboard_flow",
  "name": "üìã Dashboard Completo",
  "method": "GET",
  "ret": "obj",
  "paytoqs": false,
  "url": "http://fastapi-app:8000/dashboard/complete",
  "tls": "",
  "persist": false,
  "proxy": "",
  "authType": "",
  "x": 430,
  "y": 140,
  "wires": [
    [
      "display_detailed_info"
    ]
  ]
}
{
  "id": "display_detailed_info",
  "type": "function",
  "z": "complete_dashboard_flow",
  "name": "üìÑ Formatear Info Detallada",
  "func": "const data = msg.payload;\n\n// Formatear informaci√≥n detallada\nlet detailedInfo = \"=== üè≠ DASHBOARD COMPLETO TFM CHOCOLATE FACTORY ===\\n\\n\";\n\n// Informaci√≥n actual\nif (data.current_info) {\n    detailedInfo += \"üìä INFORMACI√ìN ACTUAL:\\n\";\n    if (data.current_info.energy) {\n        detailedInfo += `üí∞ Precio Energ√≠a: ${data.current_info.energy.price_eur_kwh} ‚Ç¨/kWh\\n`;\n        detailedInfo += `üìà Tendencia: ${data.current_info.energy.trend || 'estable'}\\n`;\n    }\n    if (data.current_info.weather) {\n        detailedInfo += `üå°Ô∏è Temperatura: ${data.current_info.weather.temperature}¬∞C\\n`;\n        detailedInfo += `üíß Humedad: ${data.current_info.weather.humidity}%\\n`;\n        detailedInfo += `üéØ Confort: ${data.current_info.weather.comfort_index || 'N/A'}\\n`;\n    }\n    detailedInfo += `üè≠ Producci√≥n: ${data.current_info.production_status}\\n\\n`;\n}\n\n// Predicciones ML\nif (data.predictions) {\n    detailedInfo += \"ü§ñ PREDICCIONES ML:\\n\";\n    if (data.predictions.energy_optimization) {\n        detailedInfo += `‚ö° Score Energ√≠a: ${data.predictions.energy_optimization.score}/100\\n`;\n        detailedInfo += `üí° Recomendaci√≥n: ${data.predictions.energy_optimization.recommendation}\\n`;\n    }\n    if (data.predictions.production_recommendation) {\n        detailedInfo += `üéØ Clase Producci√≥n: ${data.predictions.production_recommendation.class}\\n`;\n        detailedInfo += `üîß Acci√≥n: ${data.predictions.production_recommendation.action}\\n`;\n    }\n    detailedInfo += \"\\n\";\n}\n\n// Recomendaciones\nif (data.recommendations) {\n    detailedInfo += \"üí° RECOMENDACIONES OPERATIVAS:\\n\";\n    Object.keys(data.recommendations).forEach(category => {\n        if (Array.isArray(data.recommendations[category]) && data.recommendations[category].length > 0) {\n            detailedInfo += `${category.toUpperCase()}:\\n`;\n            data.recommendations[category].forEach(rec => {\n                detailedInfo += `  ‚Ä¢ ${rec}\\n`;\n            });\n        }\n    });\n    detailedInfo += \"\\n\";\n}\n\n// Alertas\nif (data.alerts && data.alerts.length > 0) {\n    detailedInfo += \"üö® ALERTAS ACTIVAS:\\n\";\n    data.alerts.forEach((alert, index) => {\n        detailedInfo += `${index + 1}. [${alert.level?.toUpperCase()}] ${alert.message}\\n`;\n        if (alert.action) {\n            detailedInfo += `   Acci√≥n: ${alert.action}\\n`;\n        }\n    });\n    detailedInfo += \"\\n\";\n}\n\n// Estado del sistema\nif (data.system_status) {\n    detailedInfo += \"‚öôÔ∏è ESTADO DEL SISTEMA:\\n\";\n    detailedInfo += `Estado: ${data.system_status.status}\\n`;\n    if (data.system_status.data_sources) {\n        detailedInfo += \"Fuentes de Datos:\\n\";\n        Object.keys(data.system_status.data_sources).forEach(source => {\n            detailedInfo += `  ‚Ä¢ ${source}: ${data.system_status.data_sources[source]}\\n`;\n        });\n    }\n}\n\ndetailedInfo += `\\n‚è∞ √öltima actualizaci√≥n: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = detailedInfo;\nreturn msg;",
  "outputs": 1,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "x": 700,
  "y": 140,
  "wires": [
    [
      "detailed_display_text"
    ]
  ]
}
{
  "id": "detailed_display_text",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "detailed_info",
  "order": 1,
  "width": 12,
  "height": 10,
  "name": "üìã Informaci√≥n Detallada",
  "label": "",
  "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap;'>{{msg.payload}}</pre>",
  "layout": "row-left",
  "x": 960,
  "y": 140,
  "wires": []
}
{
  "id": "fetch_alerts_button",
  "type": "ui_button",
  "z": "complete_dashboard_flow",
  "name": "üö® Ver Alertas",
  "group": "controls",
  "order": 2,
  "width": 3,
  "height": 2,
  "passthru": false,
  "label": "Alertas",
  "tooltip": "Ver todas las alertas activas del sistema",
  "color": "",
  "bgcolor": "#ff6b6b",
  "icon": "",
  "payload": "",
  "payloadType": "str",
  "topic": "alerts_request",
  "x": 150,
  "y": 200,
  "wires": [
    [
      "fetch_alerts"
    ]
  ]
}
{
  "id": "fetch_recommendations_button",
  "type": "ui_button",
  "z": "complete_dashboard_flow",
  "name": "üí° Ver Recomendaciones",
  "group": "controls",
  "order": 3,
  "width": 3,
  "height": 2,
  "passthru": false,
  "label": "Recomendaciones",
  "tooltip": "Ver recomendaciones operativas del sistema",
  "color": "",
  "bgcolor": "#4ecdc4",
  "icon": "",
  "payload": "",
  "payloadType": "str",
  "topic": "recommendations_request",
  "x": 180,
  "y": 260,
  "wires": [
    [
      "fetch_recommendations"
    ]
  ]
}
{
  "id": "fetch_alerts",
  "type": "http request",
  "z": "complete_dashboard_flow",
  "name": "üö® Alertas API",
  "method": "GET",
  "ret": "obj",
  "paytoqs": false,
  "url": "http://fastapi-app:8000/dashboard/alerts",
  "tls": "",
  "persist": false,
  "proxy": "",
  "authType": "",
  "x": 380,
  "y": 200,
  "wires": [
    [
      "format_alerts"
    ]
  ]
}
{
  "id": "fetch_recommendations",
  "type": "http request",
  "z": "complete_dashboard_flow",
  "name": "üí° Recomendaciones API",
  "method": "GET",
  "ret": "obj",
  "paytoqs": false,
  "url": "http://fastapi-app:8000/dashboard/recommendations",
  "tls": "",
  "persist": false,
  "proxy": "",
  "authType": "",
  "x": 420,
  "y": 260,
  "wires": [
    [
      "format_recommendations"
    ]
  ]
}
{
  "id": "format_alerts",
  "type": "function",
  "z": "complete_dashboard_flow",
  "name": "üö® Formatear Alertas",
  "func": "const data = msg.payload;\nlet alertText = \"üö® ALERTAS ACTIVAS DEL SISTEMA\\n\\n\";\n\nif (data.alerts && data.alerts.length > 0) {\n    data.alerts.forEach((alert, index) => {\n        const levelEmoji = {\n            'critical': 'üî¥',\n            'warning': 'üü°', \n            'high': 'üü†',\n            'info': 'üîµ'\n        }[alert.level] || '‚ö™';\n        \n        alertText += `${levelEmoji} ALERTA ${index + 1}\\n`;\n        alertText += `Tipo: ${alert.type || 'General'}\\n`;\n        alertText += `Nivel: ${(alert.level || 'info').toUpperCase()}\\n`;\n        alertText += `Mensaje: ${alert.message}\\n`;\n        if (alert.action) {\n            alertText += `Acci√≥n requerida: ${alert.action}\\n`;\n        }\n        alertText += \"\\n\";\n    });\n    \n    alertText += `\\nüìä RESUMEN DE ALERTAS:\\n`;\n    if (data.alert_counts) {\n        Object.keys(data.alert_counts).forEach(level => {\n            const count = data.alert_counts[level];\n            if (count > 0) {\n                alertText += `${level.toUpperCase()}: ${count}\\n`;\n            }\n        });\n    }\n} else {\n    alertText += \"‚úÖ No hay alertas activas en el sistema.\\n\";\n    alertText += \"El sistema est√° funcionando dentro de par√°metros normales.\\n\";\n}\n\nalertText += `\\n‚è∞ Actualizado: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = alertText;\nreturn msg;",
  "outputs": 1,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "x": 620,
  "y": 200,
  "wires": [
    [
      "alerts_display"
    ]
  ]
}
{
  "id": "format_recommendations",
  "type": "function",
  "z": "complete_dashboard_flow",
  "name": "üí° Formatear Recomendaciones",
  "func": "const data = msg.payload;\nlet recText = \"üí° RECOMENDACIONES OPERATIVAS\\n\\n\";\n\nif (data.recommendations) {\n    const categories = {\n        'priority': 'üî• PRIORIDAD ALTA',\n        'energy': '‚ö° ENERG√çA',\n        'production': 'üè≠ PRODUCCI√ìN',\n        'maintenance': 'üîß MANTENIMIENTO'\n    };\n    \n    Object.keys(categories).forEach(category => {\n        const recs = data.recommendations[category];\n        if (recs && Array.isArray(recs) && recs.length > 0) {\n            recText += `${categories[category]}:\\n`;\n            recs.forEach((rec, index) => {\n                recText += `  ${index + 1}. ${rec}\\n`;\n            });\n            recText += \"\\n\";\n        }\n    });\n    \n    if (data.total_recommendations > 0) {\n        recText += `üìä ESTAD√çSTICAS:\\n`;\n        recText += `Total de recomendaciones: ${data.total_recommendations}\\n`;\n        recText += `Recomendaciones prioritarias: ${data.priority_count}\\n`;\n    }\n} else {\n    recText += \"‚ÑπÔ∏è No hay recomendaciones espec√≠ficas en este momento.\\n\";\n    recText += \"El sistema est√° operando de manera √≥ptima.\\n\";\n}\n\nrecText += `\\n‚è∞ Actualizado: ${new Date(data.timestamp).toLocaleString()}`;\n\nmsg.payload = recText;\nreturn msg;",
  "outputs": 1,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "x": 680,
  "y": 260,
  "wires": [
    [
      "recommendations_display"
    ]
  ]
}
{
  "id": "alerts_display",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "detailed_info",
  "order": 2,
  "width": 12,
  "height": 6,
  "name": "üö® Alertas del Sistema",
  "label": "",
  "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap; background-color: #fff5f5; padding: 10px; border-left: 4px solid #e53e3e;'>{{msg.payload}}</pre>",
  "layout": "row-left",
  "x": 940,
  "y": 200,
  "wires": []
}
{
  "id": "recommendations_display",
  "type": "ui_text",
  "z": "complete_dashboard_flow",
  "group": "detailed_info",
  "order": 3,
  "width": 12,
  "height": 6,
  "name": "üí° Recomendaciones",
  "label": "",
  "format": "<pre style='font-family: monospace; font-size: 12px; white-space: pre-wrap; background-color: #f0fff4; padding: 10px; border-left: 4px solid #38a169;'>{{msg.payload}}</pre>",
  "layout": "row-left",
  "x": 950,
  "y": 260,
  "wires": []
}
{
  "id": "current_conditions",
  "type": "ui_group",
  "name": "üìä Condiciones Actuales",
  "tab": "chocolate_dashboard",
  "order": 1,
  "disp": true,
  "width": "12",
  "collapse": false
}
{
  "id": "ml_predictions",
  "type": "ui_group",
  "name": "ü§ñ Predicciones ML",
  "tab": "chocolate_dashboard",
  "order": 2,
  "disp": true,
  "width": "12",
  "collapse": false
}
{
  "id": "system_health",
  "type": "ui_group",
  "name": "‚öôÔ∏è Estado del Sistema",
  "tab": "chocolate_dashboard",
  "order": 3,
  "disp": true,
  "width": "12",
  "collapse": false
}
{
  "id": "controls",
  "type": "ui_group",
  "name": "üéõÔ∏è Controles",
  "tab": "chocolate_dashboard",
  "order": 4,
  "disp": true,
  "width": "6",
  "collapse": false
}
{
  "id": "detailed_info",
  "type": "ui_group",
  "name": "üìã Informaci√≥n Detallada",
  "tab": "chocolate_dashboard",
  "order": 5,
  "disp": true,
  "width": "12",
  "collapse": false
}
{
  "id": "chocolate_dashboard",
  "type": "ui_tab",
  "name": "üè≠ TFM Chocolate Factory",
  "icon": "dashboard",
  "order": 1,
  "disabled": false,
  "hidden": false
}
