# =============================================================================
# CHOCOLATE FACTORY - DEVELOPMENT ENVIRONMENT
# =============================================================================
# Entorno de desarrollo para DASHBOARD y APIs (NO para datos)
#
# PROPÓSITO:
# - Desarrollo del dashboard y visualizaciones con HOT-RELOAD
# - Desarrollo de APIs y endpoints de exposición de datos
# - Desarrollo de modelos ML y servicios de análisis
# - Testing de integraciones y transformaciones de datos
#
# BASE DE DATOS:
# - USA LA MISMA InfluxDB de PRODUCCIÓN (datos reales)
# - NO ingesta datos (evita duplicados y conflictos)
# - Solo CONSUME y TRANSFORMA datos existentes
#
# HOT-RELOAD:
# - Código fuente mapeado con bind mounts
# - Cambios en Python/HTML/CSS/JS se aplican instantáneamente
# - LOG_LEVEL=DEBUG para debugging detallado
#
# 🔐 SECRETS MANAGEMENT:
# - Usa SOPS (Secrets OPerationS) para gestión de secrets encriptados
# - Variables cargadas desde .env (desencriptado con ./decrypt-secrets.sh o en CI/CD)
# - Documentación: docs/SOPS_SECRETS_MANAGEMENT.md
#
# Desplegado en nodo Tailscale: chocolate-factory-dev.<your-tailnet>.ts.net
# Uso: docker compose -f docker-compose.dev.yml up -d
# =============================================================================

services:
  # ---------------------------------------------------------------------------
  # FASTAPI APP - DESARROLLO
  # ---------------------------------------------------------------------------
  fastapi-app-dev:
    build:
      context: .
      dockerfile: docker/fastapi.Dockerfile
    container_name: chocolate_factory_dev
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"  # Run as host user for bind mounts
    ports:
      - "8001:8000"  # Puerto diferente para evitar conflictos
    environment:
      - ENVIRONMENT=development
      - APP_NAME=chocolate-factory-dev
      - LOG_LEVEL=DEBUG
      - TZ=Europe/Madrid
      - PYTHONPATH=/app
      # APIs Externas (from SOPS-decrypted .env)
      - REE_API_TOKEN=${ree_api_token}
      - AEMET_API_KEY=${aemet_api_key}
      - OPENWEATHERMAP_API_KEY=${openweathermap_api_key}
      - ANTHROPIC_API_KEY=${anthropic_api_key}
      # InfluxDB - IMPORTANTE: Usa la DB de PRODUCCIÓN (read-only conceptualmente)
      # Este entorno NO debe ingestar datos, solo consumirlos para desarrollo
      # del dashboard, APIs y modelos ML. La ingesta se hace en producción.
      - INFLUXDB_URL=http://chocolate_factory_storage:8086
      - INFLUXDB_TOKEN=${influxdb_token}
      - INFLUXDB_ORG=chocolate_factory
      - INFLUXDB_BUCKET=energy_data
    volumes:
      # Código fuente para hot reload (mapeo directo)
      - ./src/fastapi-app/main.py:/app/main.py
      - ./src/fastapi-app/core:/app/core
      - ./src/fastapi-app/api:/app/api
      - ./src/fastapi-app/services:/app/services
      - ./src/fastapi-app/infrastructure:/app/infrastructure
      - ./src/fastapi-app/domain:/app/domain
      - ./src/fastapi-app/tasks:/app/tasks
      - ./src/fastapi-app/dependencies.py:/app/dependencies.py
      # Datos y configuración
      - ./data:/app/data
      - ./models:/app/models
      - ./static:/app/static
      - ./.claude:/app/.claude
      - ./logs/dev:/app/logs
    # No depends_on - usa InfluxDB de producción en la misma red
    networks:
      - chocolate-factory_backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ---------------------------------------------------------------------------
  # INFLUXDB - DESARROLLO (DEPRECATED - No se usa)
  # ---------------------------------------------------------------------------
  # Este servicio ya NO se usa. El entorno dev apunta a la InfluxDB de producción
  # para evitar duplicación de datos y trabajar con datos reales.
  # Se mantiene comentado como referencia histórica.
  # ---------------------------------------------------------------------------
  # influxdb-dev:
  #   image: influxdb:2.7
  #   container_name: influxdb_dev
  #   ports:
  #     - "8087:8086"  # Puerto diferente
  #   environment:
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #     - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=${influxdb_admin_password}
  #     - DOCKER_INFLUXDB_INIT_ORG=chocolate-factory-dev
  #     - DOCKER_INFLUXDB_INIT_BUCKET=energy_data_dev
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${influxdb_token_dev}
  #   volumes:
  #     - influxdb_dev_data:/var/lib/influxdb2
  #     - influxdb_dev_config:/etc/influxdb2
  #   networks:
  #     - chocolate-factory_backend
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# =============================================================================
# VOLUMES
# =============================================================================
# volumes:
#   influxdb_dev_data:
#     driver: local
#   influxdb_dev_config:
#     driver: local

# =============================================================================
# NETWORK
# =============================================================================
networks:
  chocolate-factory_backend:
    external: true  # Usar la red del compose principal
